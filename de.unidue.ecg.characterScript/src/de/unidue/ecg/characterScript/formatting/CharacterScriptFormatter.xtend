/*
 * generated by Xtext
 */
package de.unidue.ecg.characterScript.formatting

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import de.unidue.ecg.characterScript.services.CharacterScriptGrammarAccess
import com.google.inject.Inject

// import com.google.inject.Inject;
// import de.unidue.ecg.characterScript.services.CharacterScriptGrammarAccess

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class CharacterScriptFormatter extends AbstractDeclarativeFormatter {

	@Inject extension CharacterScriptGrammarAccess
	
	override protected void configureFormatting(FormattingConfig c) {
		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		c.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)

		c.setLinewrap.after(charactersAccess.importsAssignment_0)
		c.setLinewrap.after(charactersAccess.importsImportParserRuleCall_0_0)
		
		c.setLinewrap(2).before(templateAccess.templateKeyword_0)
		c.setIndentation(templateAccess.nameAssignment_1, templateAccess.endKeyword_4)
		c.setLinewrap.before(templateAccess.endKeyword_4)
		
		c.setLinewrap.before(templateAccess.defaultsAssignment_2)
		c.setLinewrap.before(templateAccess.customsAssignment_3)
		
		c.setLinewrap.before(characterAccess.propertiesPropertyParserRuleCall_3_0)
		c.setIndentation(characterAccess.nameAssignment_1, characterAccess.endKeyword_4)
		c.setLinewrap.before(characterAccess.endKeyword_4)
		
		c.setLinewrap(2).before(characterAccess.characterKeyword_0)
		
		c.setLinewrap.after(characterAccess.propertiesAssignment_3)
		
	}
}
