/*
* generated by Xtext
*/
grammar InternalCharacterScript;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.unidue.ecg.characterScript.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.unidue.ecg.characterScript.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.unidue.ecg.characterScript.services.CharacterScriptGrammarAccess;

}

@parser::members {

 	private CharacterScriptGrammarAccess grammarAccess;
 	
    public InternalCharacterScriptParser(TokenStream input, CharacterScriptGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Characters";	
   	}
   	
   	@Override
   	protected CharacterScriptGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCharacters
entryRuleCharacters returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharactersRule()); }
	 iv_ruleCharacters=ruleCharacters 
	 { $current=$iv_ruleCharacters.current; } 
	 EOF 
;

// Rule Characters
ruleCharacters returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCharactersAccess().getImportsImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharactersRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCharactersAccess().getTemplatesTemplateParserRuleCall_1_0()); 
	    }
		lv_templates_1_0=ruleTemplate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharactersRule());
	        }
       		add(
       			$current, 
       			"templates",
        		lv_templates_1_0, 
        		"Template");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCharactersAccess().getCustomsCustomsParserRuleCall_2_0()); 
	    }
		lv_customs_2_0=ruleCustoms		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharactersRule());
	        }
       		set(
       			$current, 
       			"customs",
        		lv_customs_2_0, 
        		"Customs");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCharactersAccess().getCharactersCharacterParserRuleCall_3_0()); 
	    }
		lv_characters_3_0=ruleCharacter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharactersRule());
	        }
       		add(
       			$current, 
       			"characters",
        		lv_characters_3_0, 
        		"Character");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		lv_importedNamespace_1_0=RULE_ID
		{
			newLeafNode(lv_importedNamespace_1_0, grammarAccess.getImportAccess().getImportedNamespaceIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleTemplate
entryRuleTemplate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateRule()); }
	 iv_ruleTemplate=ruleTemplate 
	 { $current=$iv_ruleTemplate.current; } 
	 EOF 
;

// Rule Template
ruleTemplate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='template' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateAccess().getTemplateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateAccess().getDefaultsDefaultAttributeParserRuleCall_2_0()); 
	    }
		lv_defaults_2_0=ruleDefaultAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRule());
	        }
       		add(
       			$current, 
       			"defaults",
        		lv_defaults_2_0, 
        		"DefaultAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateAccess().getCustomsCustomAttributeParserRuleCall_3_0()); 
	    }
		lv_customs_3_0=ruleCustomAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRule());
	        }
       		add(
       			$current, 
       			"customs",
        		lv_customs_3_0, 
        		"CustomAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='end' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemplateAccess().getEndKeyword_4());
    }
)
;





// Entry rule entryRuleDefaultAttribute
entryRuleDefaultAttribute returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultAttributeRule()); } 
	 iv_ruleDefaultAttribute=ruleDefaultAttribute 
	 { $current=$iv_ruleDefaultAttribute.current.getText(); }  
	 EOF 
;

// Rule DefaultAttribute
ruleDefaultAttribute returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='full name' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefaultAttributeAccess().getFullNameKeyword_0()); 
    }

    |
	kw='age' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefaultAttributeAccess().getAgeKeyword_1()); 
    }

    |
	kw='description' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefaultAttributeAccess().getDescriptionKeyword_2()); 
    }

    |
	kw='sex' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefaultAttributeAccess().getSexKeyword_3()); 
    }

    |
	kw='type' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefaultAttributeAccess().getTypeKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleCustomAttribute
entryRuleCustomAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomAttributeRule()); }
	 iv_ruleCustomAttribute=ruleCustomAttribute 
	 { $current=$iv_ruleCustomAttribute.current; } 
	 EOF 
;

// Rule CustomAttribute
ruleCustomAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCustomAttributeAccess().getCaNameCustomAttributeNameParserRuleCall_0_0()); 
	    }
		lv_caName_0_0=ruleCustomAttributeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomAttributeRule());
	        }
       		set(
       			$current, 
       			"caName",
        		lv_caName_0_0, 
        		"CustomAttributeName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='as' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCustomAttributeAccess().getAsKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCustomAttributeAccess().getTypeAttributeTypeEnumRuleCall_2_0_0()); 
	    }
		lv_type_2_0=ruleAttributeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"AttributeType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCustomAttributeAccess().getLeftParenthesisKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomAttributeAccess().getEnumValuesEnumValueParserRuleCall_2_1_1_0()); 
	    }
		lv_enumValues_4_0=ruleEnumValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomAttributeRule());
	        }
       		add(
       			$current, 
       			"enumValues",
        		lv_enumValues_4_0, 
        		"EnumValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCustomAttributeAccess().getCommaKeyword_2_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomAttributeAccess().getEnumValuesEnumValueParserRuleCall_2_1_2_1_0()); 
	    }
		lv_enumValues_6_0=ruleEnumValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomAttributeRule());
	        }
       		add(
       			$current, 
       			"enumValues",
        		lv_enumValues_6_0, 
        		"EnumValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCustomAttributeAccess().getRightParenthesisKeyword_2_1_3());
    }
)))
;





// Entry rule entryRuleCustomAttributeName
entryRuleCustomAttributeName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomAttributeNameRule()); }
	 iv_ruleCustomAttributeName=ruleCustomAttributeName 
	 { $current=$iv_ruleCustomAttributeName.current; } 
	 EOF 
;

// Rule CustomAttributeName
ruleCustomAttributeName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCustomAttributeNameAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomAttributeNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleEnumValue
entryRuleEnumValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumValueRule()); }
	 iv_ruleEnumValue=ruleEnumValue 
	 { $current=$iv_ruleEnumValue.current; } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumValueAccess().getNameEnumIDParserRuleCall_0()); 
	    }
		lv_name_0_0=ruleEnumID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumValueRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"EnumID");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEnumID
entryRuleEnumID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumIDRule()); } 
	 iv_ruleEnumID=ruleEnumID 
	 { $current=$iv_ruleEnumID.current.getText(); }  
	 EOF 
;

// Rule EnumID
ruleEnumID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getEnumIDAccess().getINTTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEnumIDAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleCustoms
entryRuleCustoms returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomsRule()); }
	 iv_ruleCustoms=ruleCustoms 
	 { $current=$iv_ruleCustoms.current; } 
	 EOF 
;

// Rule Customs
ruleCustoms returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='custom' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCustomsAccess().getCustomKeyword_0());
    }
	otherlv_1='attributes' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCustomsAccess().getAttributesKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomsAccess().getCustomAttributesCustomAttributeParserRuleCall_2_0()); 
	    }
		lv_customAttributes_2_0=ruleCustomAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomsRule());
	        }
       		add(
       			$current, 
       			"customAttributes",
        		lv_customAttributes_2_0, 
        		"CustomAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomsAccess().getCustomAttributesCustomAttributeParserRuleCall_3_0()); 
	    }
		lv_customAttributes_3_0=ruleCustomAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomsRule());
	        }
       		add(
       			$current, 
       			"customAttributes",
        		lv_customAttributes_3_0, 
        		"CustomAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='end' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCustomsAccess().getEndKeyword_4());
    }
)
;





// Entry rule entryRuleCharacter
entryRuleCharacter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharacterRule()); }
	 iv_ruleCharacter=ruleCharacter 
	 { $current=$iv_ruleCharacter.current; } 
	 EOF 
;

// Rule Character
ruleCharacter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='character' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCharacterAccess().getCharacterKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCharacterAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCharacterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='uses' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCharacterAccess().getUsesKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCharacterRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getCharacterAccess().getTemplateTemplateCrossReference_2_1_0()); 
	}

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getCharacterAccess().getPropertiesPropertyParserRuleCall_3_0()); 
	    }
		lv_properties_4_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharacterRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_4_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='end' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCharacterAccess().getEndKeyword_4());
    }
)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getDefaultPropertyParserRuleCall_0()); 
    }
    this_DefaultProperty_0=ruleDefaultProperty
    { 
        $current = $this_DefaultProperty_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getCustomPropertyParserRuleCall_1()); 
    }
    this_CustomProperty_1=ruleCustomProperty
    { 
        $current = $this_CustomProperty_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDefaultProperty
entryRuleDefaultProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultPropertyRule()); }
	 iv_ruleDefaultProperty=ruleDefaultProperty 
	 { $current=$iv_ruleDefaultProperty.current; } 
	 EOF 
;

// Rule DefaultProperty
ruleDefaultProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDefaultPropertyAccess().getFullNameParserRuleCall_0()); 
    }
    this_FullName_0=ruleFullName
    { 
        $current = $this_FullName_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDefaultPropertyAccess().getDescriptionParserRuleCall_1()); 
    }
    this_Description_1=ruleDescription
    { 
        $current = $this_Description_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDefaultPropertyAccess().getTypeParserRuleCall_2()); 
    }
    this_Type_2=ruleType
    { 
        $current = $this_Type_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDefaultPropertyAccess().getAgeParserRuleCall_3()); 
    }
    this_Age_3=ruleAge
    { 
        $current = $this_Age_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDefaultPropertyAccess().getSexParserRuleCall_4()); 
    }
    this_Sex_4=ruleSex
    { 
        $current = $this_Sex_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFullName
entryRuleFullName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFullNameRule()); }
	 iv_ruleFullName=ruleFullName 
	 { $current=$iv_ruleFullName.current; } 
	 EOF 
;

// Rule FullName
ruleFullName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='full name' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFullNameAccess().getFullNameKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getFullNameAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFullNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
)(
(
		lv_comment_2_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_2_0, grammarAccess.getFullNameAccess().getCommentCOMMENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFullNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_2_0, 
        		"COMMENT");
	    }

)
)?)
;





// Entry rule entryRuleDescription
entryRuleDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	 iv_ruleDescription=ruleDescription 
	 { $current=$iv_ruleDescription.current; } 
	 EOF 
;

// Rule Description
ruleDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='description' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDescriptionAccess().getDescriptionKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getDescriptionAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
)(
(
		lv_comment_2_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_2_0, grammarAccess.getDescriptionAccess().getCommentCOMMENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_2_0, 
        		"COMMENT");
	    }

)
)?)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='type' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeAccess().getTypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getValueCharaTypeEnumRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleCharaType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"CharaType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_comment_2_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_2_0, grammarAccess.getTypeAccess().getCommentCOMMENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_2_0, 
        		"COMMENT");
	    }

)
)?)
;





// Entry rule entryRuleAge
entryRuleAge returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAgeRule()); }
	 iv_ruleAge=ruleAge 
	 { $current=$iv_ruleAge.current; } 
	 EOF 
;

// Rule Age
ruleAge returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='age' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAgeAccess().getAgeKeyword_0());
    }
(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getAgeAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
)(
(
		lv_comment_2_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_2_0, grammarAccess.getAgeAccess().getCommentCOMMENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_2_0, 
        		"COMMENT");
	    }

)
)?)
;





// Entry rule entryRuleSex
entryRuleSex returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSexRule()); }
	 iv_ruleSex=ruleSex 
	 { $current=$iv_ruleSex.current; } 
	 EOF 
;

// Rule Sex
ruleSex returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='sex' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSexAccess().getSexKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSexAccess().getValueCharaSexEnumRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleCharaSex		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSexRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"CharaSex");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_comment_2_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_2_0, grammarAccess.getSexAccess().getCommentCOMMENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_2_0, 
        		"COMMENT");
	    }

)
)?)
;





// Entry rule entryRuleCustomProperty
entryRuleCustomProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomPropertyRule()); }
	 iv_ruleCustomProperty=ruleCustomProperty 
	 { $current=$iv_ruleCustomProperty.current; } 
	 EOF 
;

// Rule CustomProperty
ruleCustomProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomPropertyRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getCustomPropertyAccess().getCustomAttributeRefCustomAttributeNameCrossReference_0_0()); 
	}

)
)((
(
		lv_stringValue_1_0=RULE_STRING
		{
			newLeafNode(lv_stringValue_1_0, grammarAccess.getCustomPropertyAccess().getStringValueSTRINGTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"stringValue",
        		lv_stringValue_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_intValue_2_0=RULE_INT
		{
			newLeafNode(lv_intValue_2_0, grammarAccess.getCustomPropertyAccess().getIntValueINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"intValue",
        		lv_intValue_2_0, 
        		"INT");
	    }

)
)
    |(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCustomPropertyAccess().getLeftParenthesisKeyword_1_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomPropertyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCustomPropertyAccess().getEnumValueEnumValueCrossReference_1_2_1_0()); 
	    }
		ruleEnumID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCustomPropertyAccess().getRightParenthesisKeyword_1_2_2());
    }
))(
(
		lv_comment_6_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_6_0, grammarAccess.getCustomPropertyAccess().getCommentCOMMENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_6_0, 
        		"COMMENT");
	    }

)
)?)
;





// Rule AttributeType
ruleAttributeType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='NUMBER' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getNUMBEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAttributeTypeAccess().getNUMBEREnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='TEXT' 
	{
        $current = grammarAccess.getAttributeTypeAccess().getTEXTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAttributeTypeAccess().getTEXTEnumLiteralDeclaration_1()); 
    }
));



// Rule CharaType
ruleCharaType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='PC' 
	{
        $current = grammarAccess.getCharaTypeAccess().getPCEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCharaTypeAccess().getPCEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='NPC' 
	{
        $current = grammarAccess.getCharaTypeAccess().getNPCEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCharaTypeAccess().getNPCEnumLiteralDeclaration_1()); 
    }
));



// Rule CharaSex
ruleCharaSex returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='male' 
	{
        $current = grammarAccess.getCharaSexAccess().getMaleEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCharaSexAccess().getMaleEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='female' 
	{
        $current = grammarAccess.getCharaSexAccess().getFemaleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCharaSexAccess().getFemaleEnumLiteralDeclaration_1()); 
    }
));



RULE_COMMENT : '[' ( options {greedy=false;} : . )*']';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


