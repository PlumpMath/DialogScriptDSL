/*
 * generated by Xtext
 */
package de.unidue.ecg.dialogScript.formatting

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import com.google.inject.Inject
import de.unidue.ecg.dialogScript.services.DialogScriptGrammarAccess
import org.eclipse.xtext.Keyword

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class DialogScriptFormatter extends AbstractDeclarativeFormatter {

	@Inject extension DialogScriptGrammarAccess

	override protected void configureFormatting(FormattingConfig c) {

		// It's usually a good idea to activate the following three statements.
		// They will add and preserve newlines around comments
		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		c.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)

		// handle whitespaces for symbolic keywords
		for (Keyword keyword : findKeywords(",", ":", "-", ")")) {
			c.setNoSpace().before(keyword)
		}

		for (Keyword keyword : findKeywords("(")) {
			c.setNoSpace().after(keyword)
		}

		// arrange characters closely together
//		c.setNoSpace.between(charactersDefintionAccess.charactersCharacterDefinitionParserRuleCall_2_0,
//			charactersDefintionAccess.charactersCharacterDefinitionParserRuleCall_3_1_0)

		c.setLinewrap.before(switchesDefinitionAccess.switchesKeyword_0)

		// create two new line for the scene header
		c.setLinewrap(2).before(sceneAccess.sceneKeyword_1)

		// create two new lines before every dialog kind section
		c.setLinewrap(2).before(defaultsAccess.defaultsKeyword_1)
		c.setLinewrap(2).before(firstTimeAccess.firstKeyword_1)
		c.setLinewrap.before(otherTimesAccess.elseKeyword_1)
		c.setLinewrap(2).before(conditionalAccess.modifiersModifierEnumRuleCall_0_0)
		c.setLinewrap(2).before(conditionalAccess.ifKeyword_1)
		c.setNoSpace.between(conditionalAccess.modifiersModifierEnumRuleCall_0_0, conditionalAccess.ifKeyword_1)
		c.setSpace(" ").between(conditionalAccess.modifiersModifierEnumRuleCall_0_0, conditionalAccess.ifKeyword_1)
		
		c.setLinewrap(2).before(partingLinesAccess.partingKeyword_1)
		c.setLinewrap(2).before(hubAccess.isHiddenAssignment_0)
		c.setLinewrap(2).before(hubAccess.hubKeyword_1)
		c.setNoSpace.between(hubAccess.isHiddenAssignment_0, hubAccess.hubKeyword_1)
		c.setSpace(" ").between(hubAccess.isHiddenAssignment_0, hubAccess.hubKeyword_1)
		c.setLinewrap(2).before(choiceDialogAccess.modifiersModifierEnumRuleCall_1_0)
		c.setLinewrap(2).before(conditionalChoiceDialogAccess.choicesKeyword_1)
		c.setLinewrap(2).before(conditionsDefinitionAccess.conditionsKeyword_0)
		c.setLinewrap.before(conditionDefinitionAccess.nameAssignment_0)

		// create new line before every dialog line
		c.setLinewrap.before(defaultsAccess.endKeyword_4)
		c.setLinewrap.before(dialogLineAccess.characterCharacterDefinitionCrossReference_0_0)
		//c.setLinewrap.before(dialogLineAccess.characterCharacterCrossReference_0_0)
		c.setLinewrap.before(firstTimeAccess.endKeyword_6)
		c.setLinewrap.before(conditionalAccess.endKeyword_8)
		c.setLinewrap.before(partingLinesAccess.endKeyword_4)
		c.setLinewrap.before(switchOnAccess.switchKeyword_0)
		c.setLinewrap.before(switchOffAccess.switchKeyword_0)
		c.setLinewrap.before(otherwiseAccess.modifiersModifierEnumRuleCall_0_0)
		c.setLinewrap.before(otherwiseChoiceAccess.modifiersModifierEnumRuleCall_0_0)
		c.setLinewrap.before(exitAccess.exitKeyword_1)
		c.setLinewrap.before(invokeHubAccess.enterKeyword_0)
		c.setLinewrap.before(invokeSceneAccess.enterKeyword_0)
		c.setLinewrap.before(choiceDialogAccess.endKeyword_6)
		c.setLinewrap.before(hubAccess.endKeyword_5)
		c.setLinewrap.before(conditionsDefinitionAccess.endKeyword_3)
		c.setLinewrap.before(conditionalChoiceDialogAccess.endKeyword_9)
		
		c.setNoSpace.between(dialogLineAccess.colonKeyword_1, dialogLineAccess.linesAssignment_2)
		c.setSpace(" ").between(dialogLineAccess.colonKeyword_1, dialogLineAccess.linesAssignment_2)
		
		c.setIndentation(defaultsAccess.defaultsKeyword_1, defaultsAccess.endKeyword_4)
		c.setIndentation(conditionsDefinitionAccess.conditionsKeyword_0, conditionsDefinitionAccess.endKeyword_3)
		c.setIndentation(sceneAccess.nameStringIDParserRuleCall_2_0, sceneAccess.endKeyword_4)
		c.setIndentation(firstTimeAccess.timeKeyword_2, firstTimeAccess.endKeyword_6)
		c.setIndentation(conditionalAccess.ifKeyword_1, conditionalAccess.endKeyword_8)
		c.setIndentation(hubAccess.nameAssignment_2, hubAccess.endKeyword_5)
		c.setIndentation(choiceDialogAccess.choiceKeyword_2, choiceDialogAccess.endKeyword_6)
		c.setIndentation(conditionalChoiceDialogAccess.choicesKeyword_1, conditionalChoiceDialogAccess.endKeyword_9)
		
		c.setIndentationDecrement.before(otherwiseChoiceAccess.choicesKeyword_1)
		c.setIndentationIncrement.after(otherwiseChoiceAccess.elseKeyword_2)
		c.setIndentationDecrement.before(otherwiseAccess.elseKeyword_1)
		c.setIndentationIncrement.after(otherwiseAccess.elseKeyword_1)
		c.setIndentationDecrement.before(otherTimesAccess.elseKeyword_1)
		c.setIndentationIncrement.after(otherTimesAccess.elseKeyword_1)
		
		c.setIndentation(partingLinesAccess.partingKeyword_1, partingLinesAccess.endKeyword_4)
		
		c.setLinewrap(2).before(sceneAccess.endKeyword_4)
	}
}
