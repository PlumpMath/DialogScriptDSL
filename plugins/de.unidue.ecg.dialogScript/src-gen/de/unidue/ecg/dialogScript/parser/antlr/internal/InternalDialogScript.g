/*
* generated by Xtext
*/
grammar InternalDialogScript;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.unidue.ecg.dialogScript.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.unidue.ecg.dialogScript.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.unidue.ecg.dialogScript.services.DialogScriptGrammarAccess;

}

@parser::members {

 	private DialogScriptGrammarAccess grammarAccess;
 	
    public InternalDialogScriptParser(TokenStream input, DialogScriptGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Script";	
   	}
   	
   	@Override
   	protected DialogScriptGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleScript
entryRuleScript returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScriptRule()); }
	 iv_ruleScript=ruleScript 
	 { $current=$iv_ruleScript.current; } 
	 EOF 
;

// Rule Script
ruleScript returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getScriptAccess().getScriptAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptAccess().getCharactersDefinitionCharactersDefintionParserRuleCall_1_0()); 
	    }
		lv_charactersDefinition_1_0=ruleCharactersDefintion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptRule());
	        }
       		set(
       			$current, 
       			"charactersDefinition",
        		lv_charactersDefinition_1_0, 
        		"CharactersDefintion");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptAccess().getSwitchesDefinitionSwitchesDefinitionParserRuleCall_2_0()); 
	    }
		lv_switchesDefinition_2_0=ruleSwitchesDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptRule());
	        }
       		set(
       			$current, 
       			"switchesDefinition",
        		lv_switchesDefinition_2_0, 
        		"SwitchesDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptAccess().getConditionsDefinitionConditionsDefinitionParserRuleCall_3_0()); 
	    }
		lv_conditionsDefinition_3_0=ruleConditionsDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptRule());
	        }
       		set(
       			$current, 
       			"conditionsDefinition",
        		lv_conditionsDefinition_3_0, 
        		"ConditionsDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptAccess().getScenesSceneParserRuleCall_4_0()); 
	    }
		lv_scenes_4_0=ruleScene		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptRule());
	        }
       		add(
       			$current, 
       			"scenes",
        		lv_scenes_4_0, 
        		"Scene");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleCharactersDefintion
entryRuleCharactersDefintion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharactersDefintionRule()); }
	 iv_ruleCharactersDefintion=ruleCharactersDefintion 
	 { $current=$iv_ruleCharactersDefintion.current; } 
	 EOF 
;

// Rule CharactersDefintion
ruleCharactersDefintion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='characters' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCharactersDefintionAccess().getCharactersKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCharactersDefintionAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCharactersDefintionAccess().getCharactersCharacterDefinitionParserRuleCall_2_0()); 
	    }
		lv_characters_2_0=ruleCharacterDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharactersDefintionRule());
	        }
       		add(
       			$current, 
       			"characters",
        		lv_characters_2_0, 
        		"CharacterDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCharactersDefintionAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCharactersDefintionAccess().getCharactersCharacterDefinitionParserRuleCall_3_1_0()); 
	    }
		lv_characters_4_0=ruleCharacterDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCharactersDefintionRule());
	        }
       		add(
       			$current, 
       			"characters",
        		lv_characters_4_0, 
        		"CharacterDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleCharacterDefinition
entryRuleCharacterDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharacterDefinitionRule()); }
	 iv_ruleCharacterDefinition=ruleCharacterDefinition 
	 { $current=$iv_ruleCharacterDefinition.current; } 
	 EOF 
;

// Rule CharacterDefinition
ruleCharacterDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCharacterDefinitionAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCharacterDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleSwitchesDefinition
entryRuleSwitchesDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchesDefinitionRule()); }
	 iv_ruleSwitchesDefinition=ruleSwitchesDefinition 
	 { $current=$iv_ruleSwitchesDefinition.current; } 
	 EOF 
;

// Rule SwitchesDefinition
ruleSwitchesDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='switches' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSwitchesDefinitionAccess().getSwitchesKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitchesDefinitionAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchesDefinitionAccess().getSwitchesSwitchDefinitionParserRuleCall_2_0()); 
	    }
		lv_switches_2_0=ruleSwitchDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchesDefinitionRule());
	        }
       		add(
       			$current, 
       			"switches",
        		lv_switches_2_0, 
        		"SwitchDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSwitchesDefinitionAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchesDefinitionAccess().getSwitchesSwitchDefinitionParserRuleCall_3_1_0()); 
	    }
		lv_switches_4_0=ruleSwitchDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchesDefinitionRule());
	        }
       		add(
       			$current, 
       			"switches",
        		lv_switches_4_0, 
        		"SwitchDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSwitchDefinition
entryRuleSwitchDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchDefinitionRule()); }
	 iv_ruleSwitchDefinition=ruleSwitchDefinition 
	 { $current=$iv_ruleSwitchDefinition.current; } 
	 EOF 
;

// Rule SwitchDefinition
ruleSwitchDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSwitchDefinitionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitchDefinitionAccess().getIsKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchDefinitionAccess().getValueSwitchValueEnumRuleCall_1_1_0()); 
	    }
		lv_value_2_0=ruleSwitchValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchDefinitionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"SwitchValue");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleConditionsDefinition
entryRuleConditionsDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionsDefinitionRule()); }
	 iv_ruleConditionsDefinition=ruleConditionsDefinition 
	 { $current=$iv_ruleConditionsDefinition.current; } 
	 EOF 
;

// Rule ConditionsDefinition
ruleConditionsDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='conditions' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConditionsDefinitionAccess().getConditionsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionsDefinitionAccess().getConditionsConditionDefinitionParserRuleCall_1_0()); 
	    }
		lv_conditions_1_0=ruleConditionDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionsDefinitionRule());
	        }
       		add(
       			$current, 
       			"conditions",
        		lv_conditions_1_0, 
        		"ConditionDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionsDefinitionAccess().getConditionsConditionDefinitionParserRuleCall_2_0()); 
	    }
		lv_conditions_2_0=ruleConditionDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionsDefinitionRule());
	        }
       		add(
       			$current, 
       			"conditions",
        		lv_conditions_2_0, 
        		"ConditionDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='end' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConditionsDefinitionAccess().getEndKeyword_3());
    }
)
;





// Entry rule entryRuleConditionDefinition
entryRuleConditionDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionDefinitionRule()); }
	 iv_ruleConditionDefinition=ruleConditionDefinition 
	 { $current=$iv_ruleConditionDefinition.current; } 
	 EOF 
;

// Rule ConditionDefinition
ruleConditionDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getConditionDefinitionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='when' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConditionDefinitionAccess().getWhenKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionDefinitionAccess().getSwitchListSwitchListParserRuleCall_2_0()); 
	    }
		lv_switchList_2_0=ruleSwitchList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionDefinitionRule());
	        }
       		set(
       			$current, 
       			"switchList",
        		lv_switchList_2_0, 
        		"SwitchList");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleScene
entryRuleScene returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSceneRule()); }
	 iv_ruleScene=ruleScene 
	 { $current=$iv_ruleScene.current; } 
	 EOF 
;

// Rule Scene
ruleScene returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSceneAccess().getSceneAction_0(),
            $current);
    }
)	otherlv_1='scene' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSceneAccess().getSceneKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSceneAccess().getNameStringIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleStringID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSceneRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"StringID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSceneAccess().getDialogDialogParserRuleCall_3_0()); 
	    }
		lv_dialog_3_0=ruleDialog		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSceneRule());
	        }
       		set(
       			$current, 
       			"dialog",
        		lv_dialog_3_0, 
        		"Dialog");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='end' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSceneAccess().getEndKeyword_4());
    }
	otherlv_5='scene' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSceneAccess().getSceneKeyword_5());
    }
)
;





// Entry rule entryRuleDialog
entryRuleDialog returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDialogRule()); }
	 iv_ruleDialog=ruleDialog 
	 { $current=$iv_ruleDialog.current; } 
	 EOF 
;

// Rule Dialog
ruleDialog returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDialogAccess().getDialogAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDialogAccess().getDefaultsDefaultsParserRuleCall_1_0()); 
	    }
		lv_defaults_1_0=ruleDefaults		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDialogRule());
	        }
       		set(
       			$current, 
       			"defaults",
        		lv_defaults_1_0, 
        		"Defaults");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDialogAccess().getFirstTimeFirstTimeParserRuleCall_2_0()); 
	    }
		lv_firstTime_2_0=ruleFirstTime		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDialogRule());
	        }
       		set(
       			$current, 
       			"firstTime",
        		lv_firstTime_2_0, 
        		"FirstTime");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDialogAccess().getRecursivesRecursiveParserRuleCall_3_0()); 
	    }
		lv_recursives_3_0=ruleRecursive		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDialogRule());
	        }
       		add(
       			$current, 
       			"recursives",
        		lv_recursives_3_0, 
        		"Recursive");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDialogAccess().getPartingLinesPartingLinesParserRuleCall_4_0()); 
	    }
		lv_partingLines_4_0=rulePartingLines		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDialogRule());
	        }
       		set(
       			$current, 
       			"partingLines",
        		lv_partingLines_4_0, 
        		"PartingLines");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleRecursive
entryRuleRecursive returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRecursiveRule()); }
	 iv_ruleRecursive=ruleRecursive 
	 { $current=$iv_ruleRecursive.current; } 
	 EOF 
;

// Rule Recursive
ruleRecursive returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRecursiveAccess().getConditionalParserRuleCall_0()); 
    }
    this_Conditional_0=ruleConditional
    { 
        $current = $this_Conditional_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRecursiveAccess().getHubParserRuleCall_1()); 
    }
    this_Hub_1=ruleHub
    { 
        $current = $this_Hub_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRecursiveAccess().getDialogLineParserRuleCall_2()); 
    }
    this_DialogLine_2=ruleDialogLine
    { 
        $current = $this_DialogLine_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDefaults
entryRuleDefaults returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultsRule()); }
	 iv_ruleDefaults=ruleDefaults 
	 { $current=$iv_ruleDefaults.current; } 
	 EOF 
;

// Rule Defaults
ruleDefaults returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDefaultsAccess().getDefaultsAction_0(),
            $current);
    }
)	otherlv_1='defaults' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefaultsAccess().getDefaultsKeyword_1());
    }
(
(
		lv_comment_2_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_2_0, grammarAccess.getDefaultsAccess().getCommentCOMMENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefaultsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_2_0, 
        		"COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDefaultsAccess().getBodyConditionalBodyParserRuleCall_3_0()); 
	    }
		lv_body_3_0=ruleConditionalBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefaultsRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_3_0, 
        		"ConditionalBody");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='end' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDefaultsAccess().getEndKeyword_4());
    }
)
;





// Entry rule entryRuleFirstTime
entryRuleFirstTime returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFirstTimeRule()); }
	 iv_ruleFirstTime=ruleFirstTime 
	 { $current=$iv_ruleFirstTime.current; } 
	 EOF 
;

// Rule FirstTime
ruleFirstTime returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFirstTimeAccess().getFirstTimeAction_0(),
            $current);
    }
)	otherlv_1='first' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFirstTimeAccess().getFirstKeyword_1());
    }
	otherlv_2='time' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFirstTimeAccess().getTimeKeyword_2());
    }
(
(
		lv_comment_3_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_3_0, grammarAccess.getFirstTimeAccess().getCommentCOMMENTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFirstTimeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_3_0, 
        		"COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFirstTimeAccess().getBodyConditionalBodyParserRuleCall_4_0()); 
	    }
		lv_body_4_0=ruleConditionalBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFirstTimeRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_4_0, 
        		"ConditionalBody");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFirstTimeAccess().getOtherTimesOtherTimesParserRuleCall_5_0()); 
	    }
		lv_otherTimes_5_0=ruleOtherTimes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFirstTimeRule());
	        }
       		set(
       			$current, 
       			"otherTimes",
        		lv_otherTimes_5_0, 
        		"OtherTimes");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_6='end' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFirstTimeAccess().getEndKeyword_6());
    }
)
;





// Entry rule entryRuleOtherTimes
entryRuleOtherTimes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOtherTimesRule()); }
	 iv_ruleOtherTimes=ruleOtherTimes 
	 { $current=$iv_ruleOtherTimes.current; } 
	 EOF 
;

// Rule OtherTimes
ruleOtherTimes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOtherTimesAccess().getOtherTimesAction_0(),
            $current);
    }
)	otherlv_1='else' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOtherTimesAccess().getElseKeyword_1());
    }
(
(
		lv_comment_2_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_2_0, grammarAccess.getOtherTimesAccess().getCommentCOMMENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherTimesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_2_0, 
        		"COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOtherTimesAccess().getBodyConditionalBodyParserRuleCall_3_0()); 
	    }
		lv_body_3_0=ruleConditionalBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherTimesRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_3_0, 
        		"ConditionalBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePartingLines
entryRulePartingLines returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartingLinesRule()); }
	 iv_rulePartingLines=rulePartingLines 
	 { $current=$iv_rulePartingLines.current; } 
	 EOF 
;

// Rule PartingLines
rulePartingLines returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPartingLinesAccess().getPartingLinesAction_0(),
            $current);
    }
)	otherlv_1='parting' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPartingLinesAccess().getPartingKeyword_1());
    }
(
(
		lv_comment_2_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_2_0, grammarAccess.getPartingLinesAccess().getCommentCOMMENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartingLinesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_2_0, 
        		"COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPartingLinesAccess().getBodyConditionalBodyParserRuleCall_3_0()); 
	    }
		lv_body_3_0=ruleConditionalBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartingLinesRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_3_0, 
        		"ConditionalBody");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='end' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPartingLinesAccess().getEndKeyword_4());
    }
)
;





// Entry rule entryRuleHub
entryRuleHub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHubRule()); }
	 iv_ruleHub=ruleHub 
	 { $current=$iv_ruleHub.current; } 
	 EOF 
;

// Rule Hub
ruleHub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isHidden_0_0=	'hidden' 
    {
        newLeafNode(lv_isHidden_0_0, grammarAccess.getHubAccess().getIsHiddenHiddenKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHubRule());
	        }
       		setWithLastConsumed($current, "isHidden", true, "hidden");
	    }

)
)?	otherlv_1='hub' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHubAccess().getHubKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHubAccess().getNameStringIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleStringID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHubRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"StringID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_hubComment_3_0=RULE_COMMENT
		{
			newLeafNode(lv_hubComment_3_0, grammarAccess.getHubAccess().getHubCommentCOMMENTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHubRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hubComment",
        		lv_hubComment_3_0, 
        		"COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getHubAccess().getChoiceDialogsAbstractChoiceDialogParserRuleCall_4_0()); 
	    }
		lv_choiceDialogs_4_0=ruleAbstractChoiceDialog		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHubRule());
	        }
       		add(
       			$current, 
       			"choiceDialogs",
        		lv_choiceDialogs_4_0, 
        		"AbstractChoiceDialog");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='end' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getHubAccess().getEndKeyword_5());
    }
)
;





// Entry rule entryRuleAbstractChoiceDialog
entryRuleAbstractChoiceDialog returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractChoiceDialogRule()); }
	 iv_ruleAbstractChoiceDialog=ruleAbstractChoiceDialog 
	 { $current=$iv_ruleAbstractChoiceDialog.current; } 
	 EOF 
;

// Rule AbstractChoiceDialog
ruleAbstractChoiceDialog returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractChoiceDialogAccess().getChoiceDialogParserRuleCall_0()); 
    }
    this_ChoiceDialog_0=ruleChoiceDialog
    { 
        $current = $this_ChoiceDialog_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractChoiceDialogAccess().getConditionalChoiceDialogParserRuleCall_1()); 
    }
    this_ConditionalChoiceDialog_1=ruleConditionalChoiceDialog
    { 
        $current = $this_ConditionalChoiceDialog_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractChoiceDialogAccess().getConditionalParserRuleCall_2()); 
    }
    this_Conditional_2=ruleConditional
    { 
        $current = $this_Conditional_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConditionalChoiceDialog
entryRuleConditionalChoiceDialog returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionalChoiceDialogRule()); }
	 iv_ruleConditionalChoiceDialog=ruleConditionalChoiceDialog 
	 { $current=$iv_ruleConditionalChoiceDialog.current; } 
	 EOF 
;

// Rule ConditionalChoiceDialog
ruleConditionalChoiceDialog returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalChoiceDialogAccess().getModifiersModifierEnumRuleCall_0_0()); 
	    }
		lv_modifiers_0_0=ruleModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalChoiceDialogRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_0_0, 
        		"Modifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='choices' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConditionalChoiceDialogAccess().getChoicesKeyword_1());
    }
	otherlv_2='if' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConditionalChoiceDialogAccess().getIfKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConditionalChoiceDialogAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalChoiceDialogAccess().getConditionListConditionListParserRuleCall_4_0()); 
	    }
		lv_conditionList_4_0=ruleConditionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalChoiceDialogRule());
	        }
       		set(
       			$current, 
       			"conditionList",
        		lv_conditionList_4_0, 
        		"ConditionList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConditionalChoiceDialogAccess().getRightParenthesisKeyword_5());
    }
(
(
		lv_comment_6_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_6_0, grammarAccess.getConditionalChoiceDialogAccess().getCommentCOMMENTTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionalChoiceDialogRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_6_0, 
        		"COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalChoiceDialogAccess().getChoiceDialogsChoiceDialogParserRuleCall_7_0()); 
	    }
		lv_choiceDialogs_7_0=ruleChoiceDialog		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalChoiceDialogRule());
	        }
       		add(
       			$current, 
       			"choiceDialogs",
        		lv_choiceDialogs_7_0, 
        		"ChoiceDialog");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalChoiceDialogAccess().getOtherwiseChoicesOtherwiseChoiceParserRuleCall_8_0()); 
	    }
		lv_otherwiseChoices_8_0=ruleOtherwiseChoice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalChoiceDialogRule());
	        }
       		add(
       			$current, 
       			"otherwiseChoices",
        		lv_otherwiseChoices_8_0, 
        		"OtherwiseChoice");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='end' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConditionalChoiceDialogAccess().getEndKeyword_9());
    }
)
;





// Entry rule entryRuleOtherwiseChoice
entryRuleOtherwiseChoice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOtherwiseChoiceRule()); }
	 iv_ruleOtherwiseChoice=ruleOtherwiseChoice 
	 { $current=$iv_ruleOtherwiseChoice.current; } 
	 EOF 
;

// Rule OtherwiseChoice
ruleOtherwiseChoice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOtherwiseChoiceAccess().getModifiersModifierEnumRuleCall_0_0()); 
	    }
		lv_modifiers_0_0=ruleModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherwiseChoiceRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_0_0, 
        		"Modifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='choices' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOtherwiseChoiceAccess().getChoicesKeyword_1());
    }
	otherlv_2='else' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOtherwiseChoiceAccess().getElseKeyword_2());
    }
(((	'if' 
)=>	otherlv_3='if' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOtherwiseChoiceAccess().getIfKeyword_3_0());
    }
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOtherwiseChoiceAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOtherwiseChoiceAccess().getConditionListConditionListParserRuleCall_3_2_0()); 
	    }
		lv_conditionList_5_0=ruleConditionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherwiseChoiceRule());
	        }
       		set(
       			$current, 
       			"conditionList",
        		lv_conditionList_5_0, 
        		"ConditionList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOtherwiseChoiceAccess().getRightParenthesisKeyword_3_3());
    }
)?(
(
		lv_comment_7_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_7_0, grammarAccess.getOtherwiseChoiceAccess().getCommentCOMMENTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherwiseChoiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_7_0, 
        		"COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOtherwiseChoiceAccess().getChoicesChoiceDialogParserRuleCall_5_0()); 
	    }
		lv_choices_8_0=ruleChoiceDialog		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherwiseChoiceRule());
	        }
       		add(
       			$current, 
       			"choices",
        		lv_choices_8_0, 
        		"ChoiceDialog");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleStringID
entryRuleStringID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringIDRule()); } 
	 iv_ruleStringID=ruleStringID 
	 { $current=$iv_ruleStringID.current.getText(); }  
	 EOF 
;

// Rule StringID
ruleStringID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getStringIDAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleChoiceDialog
entryRuleChoiceDialog returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChoiceDialogRule()); }
	 iv_ruleChoiceDialog=ruleChoiceDialog 
	 { $current=$iv_ruleChoiceDialog.current; } 
	 EOF 
;

// Rule ChoiceDialog
ruleChoiceDialog returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getChoiceDialogAccess().getChoiceDialogAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getChoiceDialogAccess().getModifiersModifierEnumRuleCall_1_0()); 
	    }
		lv_modifiers_1_0=ruleModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoiceDialogRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_1_0, 
        		"Modifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='choice' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getChoiceDialogAccess().getChoiceKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChoiceDialogAccess().getNameStringIDParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleStringID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoiceDialogRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"StringID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_choiceComment_4_0=RULE_COMMENT
		{
			newLeafNode(lv_choiceComment_4_0, grammarAccess.getChoiceDialogAccess().getChoiceCommentCOMMENTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoiceDialogRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"choiceComment",
        		lv_choiceComment_4_0, 
        		"COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getChoiceDialogAccess().getBodyConditionalBodyParserRuleCall_5_0()); 
	    }
		lv_body_5_0=ruleConditionalBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoiceDialogRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"ConditionalBody");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='end' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getChoiceDialogAccess().getEndKeyword_6());
    }
)
;





// Entry rule entryRuleConditionList
entryRuleConditionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionListRule()); }
	 iv_ruleConditionList=ruleConditionList 
	 { $current=$iv_ruleConditionList.current; } 
	 EOF 
;

// Rule ConditionList
ruleConditionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionListRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getConditionListAccess().getConditionsConditionDefinitionCrossReference_0_0()); 
	}

)
)(	otherlv_1='or' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConditionListAccess().getOrKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionListRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getConditionListAccess().getConditionsConditionDefinitionCrossReference_1_1_0()); 
	}

)
))*)
;





// Entry rule entryRuleJump
entryRuleJump returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJumpRule()); }
	 iv_ruleJump=ruleJump 
	 { $current=$iv_ruleJump.current; } 
	 EOF 
;

// Rule Jump
ruleJump returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getJumpAccess().getExitParserRuleCall_0()); 
    }
    this_Exit_0=ruleExit
    { 
        $current = $this_Exit_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJumpAccess().getInvokeHubParserRuleCall_1()); 
    }
    this_InvokeHub_1=ruleInvokeHub
    { 
        $current = $this_InvokeHub_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJumpAccess().getInvokeSceneParserRuleCall_2()); 
    }
    this_InvokeScene_2=ruleInvokeScene
    { 
        $current = $this_InvokeScene_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInvokeHub
entryRuleInvokeHub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvokeHubRule()); }
	 iv_ruleInvokeHub=ruleInvokeHub 
	 { $current=$iv_ruleInvokeHub.current; } 
	 EOF 
;

// Rule InvokeHub
ruleInvokeHub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enter' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInvokeHubAccess().getEnterKeyword_0());
    }
	otherlv_1='hub' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInvokeHubAccess().getHubKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvokeHubRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInvokeHubAccess().getHubHubCrossReference_2_0()); 
	    }
		ruleStringID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInvokeScene
entryRuleInvokeScene returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvokeSceneRule()); }
	 iv_ruleInvokeScene=ruleInvokeScene 
	 { $current=$iv_ruleInvokeScene.current; } 
	 EOF 
;

// Rule InvokeScene
ruleInvokeScene returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enter' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInvokeSceneAccess().getEnterKeyword_0());
    }
	otherlv_1='scene' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInvokeSceneAccess().getSceneKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvokeSceneRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInvokeSceneAccess().getSceneSceneCrossReference_2_0()); 
	    }
		ruleStringID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExit
entryRuleExit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExitRule()); }
	 iv_ruleExit=ruleExit 
	 { $current=$iv_ruleExit.current; } 
	 EOF 
;

// Rule Exit
ruleExit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExitAccess().getExitAction_0(),
            $current);
    }
)	otherlv_1='exit' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExitAccess().getExitKeyword_1());
    }
((
(
		lv_exitHub_2_0=	'hub' 
    {
        newLeafNode(lv_exitHub_2_0, grammarAccess.getExitAccess().getExitHubHubKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExitRule());
	        }
       		setWithLastConsumed($current, "exitHub", true, "hub");
	    }

)
)
    |(
(
		lv_exitScene_3_0=	'scene' 
    {
        newLeafNode(lv_exitScene_3_0, grammarAccess.getExitAccess().getExitSceneSceneKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExitRule());
	        }
       		setWithLastConsumed($current, "exitScene", true, "scene");
	    }

)
)))
;





// Entry rule entryRuleConditional
entryRuleConditional returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionalRule()); }
	 iv_ruleConditional=ruleConditional 
	 { $current=$iv_ruleConditional.current; } 
	 EOF 
;

// Rule Conditional
ruleConditional returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalAccess().getModifiersModifierEnumRuleCall_0_0()); 
	    }
		lv_modifiers_0_0=ruleModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_0_0, 
        		"Modifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConditionalAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConditionalAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalAccess().getConditionListConditionListParserRuleCall_3_0()); 
	    }
		lv_conditionList_3_0=ruleConditionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalRule());
	        }
       		set(
       			$current, 
       			"conditionList",
        		lv_conditionList_3_0, 
        		"ConditionList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConditionalAccess().getRightParenthesisKeyword_4());
    }
(
(
		lv_comment_5_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_5_0, grammarAccess.getConditionalAccess().getCommentCOMMENTTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_5_0, 
        		"COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalAccess().getBodyConditionalBodyParserRuleCall_6_0()); 
	    }
		lv_body_6_0=ruleConditionalBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_6_0, 
        		"ConditionalBody");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalAccess().getOtherwiseListOtherwiseParserRuleCall_7_0()); 
	    }
		lv_otherwiseList_7_0=ruleOtherwise		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalRule());
	        }
       		add(
       			$current, 
       			"otherwiseList",
        		lv_otherwiseList_7_0, 
        		"Otherwise");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='end' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getConditionalAccess().getEndKeyword_8());
    }
)
;





// Entry rule entryRuleSwitchList
entryRuleSwitchList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchListRule()); }
	 iv_ruleSwitchList=ruleSwitchList 
	 { $current=$iv_ruleSwitchList.current; } 
	 EOF 
;

// Rule SwitchList
ruleSwitchList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchListAccess().getSwitchesSwitchParserRuleCall_0_0()); 
	    }
		lv_switches_0_0=ruleSwitch		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchListRule());
	        }
       		add(
       			$current, 
       			"switches",
        		lv_switches_0_0, 
        		"Switch");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='and' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitchListAccess().getAndKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchListAccess().getSwitchesSwitchParserRuleCall_1_1_0()); 
	    }
		lv_switches_2_0=ruleSwitch		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchListRule());
	        }
       		add(
       			$current, 
       			"switches",
        		lv_switches_2_0, 
        		"Switch");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleSwitch
entryRuleSwitch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchRule()); }
	 iv_ruleSwitch=ruleSwitch 
	 { $current=$iv_ruleSwitch.current; } 
	 EOF 
;

// Rule Switch
ruleSwitch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSwitchAccess().getSwitchSwitchDefinitionCrossReference_0_0()); 
	}

)
)	otherlv_1='is' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitchAccess().getIsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchAccess().getValueSwitchValueEnumRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleSwitchValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"SwitchValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConditionalBody
entryRuleConditionalBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionalBodyRule()); }
	 iv_ruleConditionalBody=ruleConditionalBody 
	 { $current=$iv_ruleConditionalBody.current; } 
	 EOF 
;

// Rule ConditionalBody
ruleConditionalBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConditionalBodyAccess().getConditionalBodyAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalBodyAccess().getStatementsStatementParserRuleCall_1_0()); 
	    }
		lv_statements_1_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalBodyRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_1_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalBodyAccess().getSwitchOnSwitchOnParserRuleCall_2_0()); 
	    }
		lv_switchOn_2_0=ruleSwitchOn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalBodyRule());
	        }
       		set(
       			$current, 
       			"switchOn",
        		lv_switchOn_2_0, 
        		"SwitchOn");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalBodyAccess().getSwitchOffSwitchOffParserRuleCall_3_0()); 
	    }
		lv_switchOff_3_0=ruleSwitchOff		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalBodyRule());
	        }
       		set(
       			$current, 
       			"switchOff",
        		lv_switchOff_3_0, 
        		"SwitchOff");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalBodyAccess().getJumpJumpParserRuleCall_4_0()); 
	    }
		lv_jump_4_0=ruleJump		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalBodyRule());
	        }
       		set(
       			$current, 
       			"jump",
        		lv_jump_4_0, 
        		"Jump");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getDialogLineParserRuleCall_0()); 
    }
    this_DialogLine_0=ruleDialogLine
    { 
        $current = $this_DialogLine_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getConditionalParserRuleCall_1()); 
    }
    this_Conditional_1=ruleConditional
    { 
        $current = $this_Conditional_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOtherwise
entryRuleOtherwise returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOtherwiseRule()); }
	 iv_ruleOtherwise=ruleOtherwise 
	 { $current=$iv_ruleOtherwise.current; } 
	 EOF 
;

// Rule Otherwise
ruleOtherwise returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOtherwiseAccess().getModifiersModifierEnumRuleCall_0_0()); 
	    }
		lv_modifiers_0_0=ruleModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherwiseRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_0_0, 
        		"Modifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='else' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOtherwiseAccess().getElseKeyword_1());
    }
(((	'if' 
)=>	otherlv_2='if' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOtherwiseAccess().getIfKeyword_2_0());
    }
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOtherwiseAccess().getLeftParenthesisKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOtherwiseAccess().getConditionListConditionListParserRuleCall_2_2_0()); 
	    }
		lv_conditionList_4_0=ruleConditionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherwiseRule());
	        }
       		set(
       			$current, 
       			"conditionList",
        		lv_conditionList_4_0, 
        		"ConditionList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOtherwiseAccess().getRightParenthesisKeyword_2_3());
    }
)?(
(
		lv_comment_6_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_6_0, grammarAccess.getOtherwiseAccess().getCommentCOMMENTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherwiseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_6_0, 
        		"COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOtherwiseAccess().getBodyConditionalBodyParserRuleCall_4_0()); 
	    }
		lv_body_7_0=ruleConditionalBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherwiseRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_7_0, 
        		"ConditionalBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSwitchOff
entryRuleSwitchOff returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchOffRule()); }
	 iv_ruleSwitchOff=ruleSwitchOff 
	 { $current=$iv_ruleSwitchOff.current; } 
	 EOF 
;

// Rule SwitchOff
ruleSwitchOff returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='switch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSwitchOffAccess().getSwitchKeyword_0());
    }
	otherlv_1='off' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitchOffAccess().getOffKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchOffRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSwitchOffAccess().getSetsSwitchDefinitionCrossReference_2_0()); 
	}

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSwitchOffAccess().getCommaKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchOffRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getSwitchOffAccess().getSetsSwitchDefinitionCrossReference_3_1_0()); 
	}

)
))*(
(
		lv_comment_5_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_5_0, grammarAccess.getSwitchOffAccess().getCommentCOMMENTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchOffRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_5_0, 
        		"COMMENT");
	    }

)
)?)
;





// Entry rule entryRuleSwitchOn
entryRuleSwitchOn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchOnRule()); }
	 iv_ruleSwitchOn=ruleSwitchOn 
	 { $current=$iv_ruleSwitchOn.current; } 
	 EOF 
;

// Rule SwitchOn
ruleSwitchOn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='switch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSwitchOnAccess().getSwitchKeyword_0());
    }
	otherlv_1='on' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitchOnAccess().getOnKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchOnRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSwitchOnAccess().getSetsSwitchDefinitionCrossReference_2_0()); 
	}

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSwitchOnAccess().getCommaKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchOnRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getSwitchOnAccess().getSetsSwitchDefinitionCrossReference_3_1_0()); 
	}

)
))*(
(
		lv_comment_5_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_5_0, grammarAccess.getSwitchOnAccess().getCommentCOMMENTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSwitchOnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_5_0, 
        		"COMMENT");
	    }

)
)?)
;





// Entry rule entryRuleDialogLine
entryRuleDialogLine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDialogLineRule()); }
	 iv_ruleDialogLine=ruleDialogLine 
	 { $current=$iv_ruleDialogLine.current; } 
	 EOF 
;

// Rule DialogLine
ruleDialogLine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDialogLineRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getDialogLineAccess().getCharacterCharacterDefinitionCrossReference_0_0()); 
	}

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDialogLineAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDialogLineAccess().getLinesStringIDParserRuleCall_2_0()); 
	    }
		lv_lines_2_0=ruleStringID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDialogLineRule());
	        }
       		set(
       			$current, 
       			"lines",
        		lv_lines_2_0, 
        		"StringID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_comment_3_0=RULE_COMMENT
		{
			newLeafNode(lv_comment_3_0, grammarAccess.getDialogLineAccess().getCommentCOMMENTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDialogLineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_3_0, 
        		"COMMENT");
	    }

)
)?)
;





// Rule Modifier
ruleModifier returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='single' 
	{
        $current = grammarAccess.getModifierAccess().getSingleEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getModifierAccess().getSingleEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='random' 
	{
        $current = grammarAccess.getModifierAccess().getRandomEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getModifierAccess().getRandomEnumLiteralDeclaration_1()); 
    }
));



// Rule SwitchValue
ruleSwitchValue returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='on' 
	{
        $current = grammarAccess.getSwitchValueAccess().getOnEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSwitchValueAccess().getOnEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='off' 
	{
        $current = grammarAccess.getSwitchValueAccess().getOffEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSwitchValueAccess().getOffEnumLiteralDeclaration_1()); 
    }
));



RULE_COMMENT : '[' ( options {greedy=false;} : . )*']';

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\'|'{')|RULE_WILDCARD|~(('\\'|'"'|'{')))* '"';

fragment RULE_WILDCARD : '{' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* '}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


